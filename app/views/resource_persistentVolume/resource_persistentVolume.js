'use strict';angular.module('console.resource_management', [    {        files: [            'components/searchbar/searchbar.js',            'views/resource_persistentVolume/resource_persistentVolume.css'        ]    }])    .controller('persistentVolumeCtrl', ['$log', 'Ws', 'DeploymentConfig', 'persistent', '$state', '$rootScope', '$scope', 'configmaps', 'secretskey',        function ($log, Ws, DeploymentConfig, persistent, $state, $rootScope, $scope, configmaps, secretskey) {            $scope.grid = {                rmpage: 1,                size: 10,                txt: ''            };            $scope.$watch('grid.rmpage', function (newVal, oldVal) {                if (newVal === oldVal) {                    return                }                if (newVal !== oldVal) {                    rmrefresh(newVal);                }            });            $scope.text='您还没有创建存储卷';            var rmrefresh = function (page) {                $(document.body).animate({                    scrollTop: 0                }, 200);                var skip = (page - 1) * $scope.grid.size;                $scope.persistents = $scope.persistentdata.slice(skip, skip + $scope.grid.size)||[];            };            var watchPc = function (resourceVersion) {                Ws.watch({                    api: 'k8s',                    resourceVersion: resourceVersion,                    namespace: $rootScope.namespace,                    type: 'persistentvolumeclaims',                    name: ''                }, function (res) {                    var data = JSON.parse(res.data);                    updatePC(data);                    //console.log(data);                }, function () {                    $log.info("webSocket start");                }, function () {                    $log.info("webSocket stop");                    var key = Ws.key($rootScope.namespace, 'persistentvolumeclaims', '');                    if (!$rootScope.watches[key] || $rootScope.watches[key].shouldClose) {                        return;                    }                    watchPc($scope.resourceVersion);                });            };            var updatePC = function (data) {                if (data.type == 'ERROR') {                    $log.info("err", data.object.message);                    Ws.clear();                    persistentlist();                    return;                }                $scope.resourceVersion = data.object.metadata.resourceVersion;                data.object.spec.resources.requests.storage=data.object.spec.resources.requests.storage.replace('i','B')                if (data.type == 'ADDED') {                            $scope.persistentdata.unshift(data.object)                            rmrefresh(1);                            $scope.$apply();                } else if (data.type == "MODIFIED") {                    //data.object.spec.resources.requests.storage=data.object.spec.resources.requests.storage.replace('i','B')                    angular.forEach($scope.persistentdata, function (item, i) {                        if (item.metadata.name == data.object.metadata.name) {                            $scope.persistentdata[i] = data.object;                            rmrefresh(1);                            $scope.$apply();                        }                    })                }else if (data.type == "DELETED") {                    //data.object.spec.resources.requests.storage=data.object.spec.resources.requests.storage.replace('i','B')                    angular.forEach($scope.persistentdata, function (item, i) {                        if (item.metadata.name == data.object.metadata.name) {                            $scope.persistentdata.splice(i,1)                            rmrefresh(1);                            $scope.$apply();                        }                    })                }            }            $scope.rmsearch = function (event) {                    if (!$scope.grid.rmtxt) {                        $scope.persistentdata = angular.copy($scope.cpoypersistents)                        rmrefresh(1);                        $scope.grid.rmtotal = $scope.cpoypersistents.length;                        $scope.grid.rmpage = 1;                        return;                    }                    $scope.persistentdata = [];                    var iarr = [];                    var str = $scope.grid.rmtxt;                    str = str.toLocaleLowerCase();                    angular.forEach($scope.cpoypersistents, function (item, i) {                        var nstr = item.metadata.name;                        nstr = nstr.toLocaleLowerCase();                        if (nstr.indexOf(str) !== -1) {                            iarr.push(item)                        }                    })                    if(iarr.length===0){                        $scope.isQuery=true;                        $scope.text='没有查询到相关数据';                    }                    else{                        $scope.text='您还没有创建存储卷';                    }                    $scope.persistentdata=angular.copy(iarr);                    rmrefresh(1);                    $scope.grid.rmtotal = $scope.persistentdata.length;            };        }])