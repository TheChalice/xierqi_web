'use strict';angular.module('console.create_pipeline', [{        files: [            'views/create_pipeline/create_pipeline.css'        ]    }])    .controller('CreatePiplineCtrl', ['$scope', 'createPipline', 'tempipline', 'processedtemplates', '$rootScope','postapi','$state','BuildConfig',        function ($scope, createPipline, tempipline, processedtemplates, $rootScope,postapi,$state,BuildConfig) {            //console.log('createPipline', createPipline);            $scope.pipelinelist = [];            $scope.pipelineMap = {};            $scope.parame = {}            $scope.postpipeline = {}            $scope.labels = [];            //获取buildConfig列表            var loadBuildConfigs = function () {                BuildConfig.get({namespace: $rootScope.namespace, region: $rootScope.region}, function (data) {                    $scope.allData = []                    angular.forEach(data.items, function (item, i) {                        if (item.spec.strategy.type === "JenkinsPipeline") {                            $scope.allData.push(item)                        }                    })                }, function (res) {                    //todo 错误处理                });            };            loadBuildConfigs();            angular.forEach(createPipline.items, function (Pipline, i) {                if (Pipline.metadata.annotations && Pipline.metadata.annotations.tags) {                    //console.log(Pipline.metadata.annotations.tags === "instant-app,jenkins,paoking");                    if (Pipline.metadata.annotations.tags === "instant-app,jenkins,paoking") {                        $scope.pipelinelist.push(Pipline);                    }                }            })            $scope.$watch('parame', function (n, o) {                angular.forEach($scope.parame, function (v, i) {                    if(i === 'APP_NAME'){                        angular.forEach($scope.allData, function (item, x) {                            if(item.metadata.name == n[i]){                               $scope.nameRepeat = true;                            }else{                                $scope.nameRepeat = false;                            }                        })                    }                })            },true);            $scope.addLabel = function () {                $scope.labels.push({key: '', value: '', disabled: false})            }            $scope.rmLabel = function (innerIndex) {                $scope.labels.splice(innerIndex, 1);            }            $scope.changepipeline = function (name) {                $scope.pipelineMap = {};                $scope.parame = {}                $scope.tempname = name;                $scope.labels = [];                angular.forEach($scope.pipelinelist, function (pipeline, i) {                    if (pipeline.metadata.name === name) {                        $scope.postpipeline = pipeline                        angular.forEach(pipeline.parameters, function (parame, k) {                            $scope.pipelineMap[parame.name] = {                                displayName: parame.displayName,                                value: parame.value,                                description: parame.description,                                required: parame.required                            }                            $scope.parame[parame.name] = parame.value                        })                        angular.forEach(pipeline.labels, function (labels, k) {                            $scope.labels.push({key: k, value: labels, disabled: true})                        })                    }                })            }            $scope.createPipeline = function () {                var canbuild = true;                var r = /^[a-z][a-z0-9]{2,28}[a-z0-9]$/;                angular.forEach($scope.pipelineMap, function (value, i) {                    //console.log('value', value.required);                    //value.canbuild=false;                    angular.forEach($scope.parame, function (parame,key) {                        if (key === i) {                            if (value.required) {                                //console.log('value',value,parame);                                if (value.displayName === "流水线名称") {                                    if (!r.test(parame)) {                                        value.nameerr = true;                                        value.canbuild = false;                                        canbuild=false                                    }                                }                                if (!parame) {                                    //console.log('value.value',parame);                                    value.canbuild = true;                                    value.nameerr = false;                                    canbuild=false                                }                            }                        }                    })                })                if (!canbuild || $scope.nameRepeat) {                    return                }                //console.log('$scope.postpipeline', $scope.postpipeline);                $scope.postpipeline.labels = {};                angular.forEach($scope.labels, function (labels, k) {                    if (labels.key && labels.value) {                        $scope.postpipeline.labels[labels.key] = labels.value;                    }                })                //console.log('$scope.postpipeline.labels', $scope.postpipeline.labels);                angular.forEach($scope.parame, function (value, key) {                    //console.log('key', key);                    //console.log('value', value);                    if (value) {                        //$scope.postpipeline.objects                        angular.forEach($scope.postpipeline.objects, function (object, k) {                            var objectstring = JSON.stringify(object)                            //console.log('key', key);                            //console.log('value', value);                            console.log('objectstring', objectstring);                            objectstring=objectstring.replace(new RegExp('\\$\\{'+key+'\\}','g'),value)                            var obj = JSON.parse(objectstring)                            console.log('obj', obj);                            $scope.postpipeline[k]=obj;                            //console.log('newobjectstring', obj);                        })                        angular.forEach($scope.postpipeline.parameters, function (item, val) {                            if (item.name === key) {                                item.value=value                            }                        })                    }                })                tempipline.get({namespaces:'openshift', name: $scope.postpipeline.metadata.name}, function (temp) {                    temp.labels = $scope.postpipeline.labels                    temp.objects = $scope.postpipeline.objects                    temp.parameters = $scope.postpipeline.parameters                    processedtemplates.create({namespace: $rootScope.namespace}, temp, function (data) {                        //console.log('data', data);                        angular.forEach(data.objects, function (obj,i) {                            postapi.apis(obj)                        })                        $state.go('console.pipeline',({namespace:$rootScope.namespace}));                    }, function (err) {                        console.log('err', err);                    })                })            }            //console.log('$scope.pipelinelist', $scope.pipelinelist);        }]);