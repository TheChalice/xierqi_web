'use strict';angular.module('console.create_pipeline', [{        files: [            'views/create_pipeline/create_pipeline.css'        ]    }])    .controller('CreatePiplineCtrl', ['$scope', 'createPipline','tempipline',        function ($scope, createPipline,tempipline) {            //console.log('createPipline', createPipline);            $scope.pipelinelist = [];            $scope.pipelineMap={};            $scope.parame={}            $scope.postpipeline={}            $scope.labels=[];            angular.forEach(createPipline.items, function (Pipline, i) {                if (Pipline.metadata.annotations && Pipline.metadata.annotations.tags) {                    //console.log(Pipline.metadata.annotations.tags === "instant-app,jenkins");                    if (Pipline.metadata.annotations.tags === "instant-app,jenkins") {                        $scope.pipelinelist.push(Pipline);                    }                }            })            $scope.addLabel= function () {                $scope.labels.push({key:'',value:'',disabled:false})            }            $scope.rmLabel = function (innerIndex) {                $scope.labels.splice(innerIndex, 1);            }            $scope.changepipeline = function (name) {                //console.log('$scope.pipelinelist', $scope.pipelinelist);                $scope.pipelineMap={};                $scope.parame={}                $scope.tempname=name;                $scope.labels=[];                angular.forEach($scope.pipelinelist, function (pipeline,i) {                    if (pipeline.metadata.name === name) {                        $scope.postpipeline=pipeline                        angular.forEach(pipeline.parameters, function (parame,k) {                            $scope.pipelineMap[parame.name]={                                displayName: parame.displayName,                                value:parame.value,                                description:parame.description,                                required:parame.required                            }                            $scope.parame[parame.name]=parame.value                        })                        angular.forEach(pipeline.labels, function (labels,k) {                            $scope.labels.push({key:k,value:labels,disabled:true})                        })                    }                })                //tempipline.get({namespace: 'openshift',name:name}, function (item) {                //    //console.log('item', item);                //                //                //    console.log('$scope.pipelineMap', $scope.pipelineMap);                //})            }            //console.log('$scope.pipelinelist', $scope.pipelinelist);        }]);